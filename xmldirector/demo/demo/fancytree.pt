<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="context/main_template/macros/master"
      i18n:domain="xmldirector.plonecore">
      <body>

<metal:javascript fill-slot="javascript_head_slot" tal:define="fbase string:$portal_url/++resource++xmldirector.demo/fancytree">
    <script>
        require = undefined;
        define = undefined;
    </script>
    <script type="text/javascript" src="https://code.jquery.com/ui/1.11.4/jquery-ui.min.js"></script>
    <script type="text/javascript" tal:attributes="src string:$fbase/dist/jquery.fancytree-all.js"></script>
    <script type="text/javascript" tal:attributes="src string:$fbase/3rd-party/extensions/contextmenu/js/jquery.contextMenu-1.6.5.js"></script>
    <script type="text/javascript" tal:attributes="src string:$fbase/3rd-party/extensions/contextmenu/js/jquery.fancytree.contextMenu.js"></script>
    <link rel="stylesheet" 
          type="text/css" 
          tal:attributes="href string:$fbase/dist/skin-xp/ui.fancytree.css" />
    <link rel="stylesheet" 
          type="text/css" 
          tal:attributes="href string:$fbase/3rd-party/extensions/contextmenu/css/jquery.contextMenu.css"/>
</metal:javascript>

<metal:main fill-slot="content-core">
    <metal:content-core define-macro="content-core">
        <h1>Fancytree demo</h1>

        <div id="tree1" class="tree" style="float: left; width: 40%">
          <ul id="treeData" style="display: none;">
            <li id="1">Node 1
            <li id="2" class="folder">Folder 2
              <ul>
                <li id="3">Node 2.1
                <li id="4">Node 2.2
              </ul>
          </ul>
        </div>

        <div id="tree2" class="tree" style="float: left; width: 40%">
          <ul id="treeData2" style="display: none;">
            <li id="2-1">Node 1
            <li id="2-2" class="folder">Folder 2
              <ul>
                <li id="2-3">Node 2.1
                <li id="2-4">Node 2.2
              </ul>
          </ul>
        </div>

        <div style="clear: both"></div>

      <script type="text/javascript">

        function menu_rename(action, data) {
            var node = $.ui.fancytree.getNode(data.$trigger);
            var title = node.title;
            var new_title = prompt('Rename', title);
            node.setTitle(new_title);
        }

        function menu_delete(action, data) {
            var node = $.ui.fancytree.getNode(data.$trigger);
            node.remove();
        }

        function menu_add_folder(action, data) {
            var node = $.ui.fancytree.getNode(data.$trigger);
            var title = prompt('Folder name', '');
            node.addChildren({title: title, folder: true});
        }

        function menu_add_item(action, data) {
            var node = $.ui.fancytree.getNode(data.$trigger);
            var title = prompt('Item name', '');
            node.addChildren({title: title, folder: false});
        }

        $(function(){
        
            $(".tree").fancytree({ 
              extensions: ["dnd", "edit", "contextMenu"],
              contextMenu: {
                  menu: {
                      'Rename': { 'name': 'Rename', 'icon': 'edit', callback: menu_rename },
                      'Remove': { 'name': 'Delete', 'icon': 'delete', callback: menu_delete },
                      'Add Folder': { 'name': 'Add Folder', 'icon': 'add', callback: menu_add_folder},
                      'Add item': { 'name': 'Add item', 'icon': 'add', callback: menu_add_item},
                  },
              },

              dnd: {
                  autoExpandMS: 400,
                  focusOnClick: true,
                  preventVoidMoves: true, // Prevent dropping nodes 'before self', etc.
                  preventRecursiveMoves: true, // Prevent dropping nodes on own descendants
                  dragStart: function(node, data) {
                    return true;
                  },
                  dragEnter: function(node, data) {
                    /** data.otherNode may be null for non-fancytree droppables.
                     *  Return false to disallow dropping on node. In this case
                     *  dragOver and dragLeave are not called.
                     *  Return 'over', 'before, or 'after' to force a hitMode.
                     *  Return ['before', 'after'] to restrict available hitModes.
                     *  Any other return value will calc the hitMode from the cursor position.
                     */
                    // Prevent dropping a parent below another parent (only sort
                    // nodes under the same parent)
                    /*         
                        if(node.parent !== data.otherNode.parent){
                            return false;
                        }
                        // Don't allow dropping *over* a node (would create a child)
                        return ["before", "after"];
                    */
                     return true;
                  },
                  dragDrop: function(node, data) {
                    data.otherNode.moveTo(node, data.hitMode);
                  }
              },
         
            });
        });
      </script>       
  </metal:content-core>
</metal:main>

</body>
</html>

